add_row(Sample = i, Visit = "V8" , )
ts_data <- ts(d2$`Mean of sample OD`[d2$Sample!="V8"], frequency = 1)
k <- auto.arima(ts_data)
d2[d2$Visit=="V8","Mean of sample OD"] <- forecast(k, h = 1)[4]$mean[1]
ts_data <- ts(d2$`OD/Blank ≥ 3 is positive`[d2$Sample!="V8"], frequency = 1)
k <- auto.arima(ts_data)
d2[d2$Visit=="V8","OD/Blank ≥ 3 is positive"] <- forecast(k, h = 1)[4]$mean[1]
d1=d1 %>% bind_rows(d2)
}
View(d1)
unique_samples <- unique(d$Sample)
# 2. Create an empty list to store the new "V8" rows we generate
new_rows_list <- list()
# 3. Loop through each unique sample
for(i in unique_samples) {
# --- Data Preparation for the current sample ---
# Filter to get data for the current sample and create a numeric 'Time' column
sample_data <- d %>%
filter(Sample == i) %>%
mutate(Time = as.numeric(str_extract(Visit, "\\d+")))
# --- Prediction for 'Mean of sample OD' using lm ---
lm_od <- lm(`Mean of sample OD` ~ Time, data = sample_data)
predicted_od <- predict(lm_od, newdata = tibble(Time = 8))
# --- Prediction for 'OD/Blank ≥ 3 is positive' using lm ---
lm_blank <- lm(`OD/Blank ≥ 3 is positive` ~ Time, data = sample_data)
predicted_blank <- predict(lm_blank, newdata = tibble(Time = 8))
# --- Store the newly created V8 row in our list ---
new_rows_list[[i]] <- tibble(
Sample = i,
Visit = "V8",
`Mean of sample OD` = predicted_od,
`OD/Blank ≥ 3 is positive` = predicted_blank
)
}
# 4. Combine the original data 'd' with all the new V8 rows into a data frame named 'd1'
d1 <- d %>%
bind_rows(new_rows_list)
# View the final result stored in 'd1'
print(d1, n=20)
library(readxl)
library(dplyr)
library(tidyverse)
library(forecast)
path="D:/Naser/clinical Trial/01.06.2025 Perto Immuno simulate data/Screening test"
d=read_xlsx(paste0(path,"/Part 1 test 1.xlsx")) %>% filter(!is.na(Sample))
sample=unique(d$Sample)
i=sample[5]
d1=d %>%
filter(Sample==i) %>%
add_row(Sample = i, Visit = "V8" , )
ts_data <- ts(d1$`Mean of sample OD`[d1$Sample!="V8"], frequency = 1)
k <- auto.arima(ts_data)
d1[d1$Visit=="V8","Mean of sample OD"] <- forecast(k, h = 1)[4]$mean[1]
ts_data <- ts(d1$`OD/Blank ≥ 3 is positive`[d1$Sample!="V8"], frequency = 1)
k <- auto.arima(ts_data)
d1[d1$Visit=="V8","OD/Blank ≥ 3 is positive"] <- forecast(k, h = 1)[4]$mean[1]
for(i in sample[-1]){
d2=d %>%
filter(Sample==i) %>%
add_row(Sample = i, Visit = "V8" , )
ts_data <- ts(d2$`Mean of sample OD`[d2$Sample!="V8"], frequency = 1)
k <- auto.arima(ts_data)
d2[d2$Visit=="V8","Mean of sample OD"] <- forecast(k, h = 1)[4]$mean[1]
ts_data <- ts(d2$`OD/Blank ≥ 3 is positive`[d2$Sample!="V8"], frequency = 1)
k <- auto.arima(ts_data)
d2[d2$Visit=="V8","OD/Blank ≥ 3 is positive"] <- forecast(k, h = 1)[4]$mean[1]
d1=d1 %>% bind_rows(d2)
}
library(readxl)
library(dplyr)
library(tidyverse)
library(forecast)
path="D:/Naser/clinical Trial/01.06.2025 Perto Immuno simulate data/Screening test"
d=read_xlsx(paste0(path,"/Part 1 test 1.xlsx")) %>% filter(!is.na(Sample))
sample=unique(d$Sample)
i=sample[1]
d1=d %>%
filter(Sample==i) %>%
add_row(Sample = i, Visit = "V8" , )
ts_data <- ts(d1$`Mean of sample OD`[d1$Sample!="V8"], frequency = 1)
k <- auto.arima(ts_data)
d1[d1$Visit=="V8","Mean of sample OD"] <- forecast(k, h = 1)[4]$mean[1]
ts_data <- ts(d1$`OD/Blank ≥ 3 is positive`[d1$Sample!="V8"], frequency = 1)
k <- auto.arima(ts_data)
d1[d1$Visit=="V8","OD/Blank ≥ 3 is positive"] <- forecast(k, h = 1)[4]$mean[1]
for(i in sample[-1]){
d2=d %>%
filter(Sample==i) %>%
add_row(Sample = i, Visit = "V8" , )
ts_data <- ts(d2$`Mean of sample OD`[d2$Sample!="V8"], frequency = 1)
k <- auto.arima(ts_data)
d2[d2$Visit=="V8","Mean of sample OD"] <- forecast(k, h = 1)[4]$mean[1]
ts_data <- ts(d2$`OD/Blank ≥ 3 is positive`[d2$Sample!="V8"], frequency = 1)
k <- auto.arima(ts_data)
d2[d2$Visit=="V8","OD/Blank ≥ 3 is positive"] <- forecast(k, h = 1)[4]$mean[1]
d1=d1 %>% bind_rows(d2)
}
library(readxl)
library(dplyr)
library(tidyverse)
library(forecast)
path="D:/Naser/clinical Trial/01.06.2025 Perto Immuno simulate data/Screening test"
d=read_xlsx(paste0(path,"/Part 1 test 1.xlsx")) %>% filter(!is.na(Sample))
sample=unique(d$Sample)
i=sample[1]
d1=d %>%
filter(Sample==i) %>%
add_row(Sample = i, Visit = "V8" , )
ts_data <- ts(d1$`Mean of sample OD`[d1$Sample!="V8"], frequency = 1)
k <- auto.arima(ts_data)
d1[d1$Visit=="V8","Mean of sample OD"] <- forecast(k, h = 1)$mean[1]
ts_data <- ts(d1$`OD/Blank ≥ 3 is positive`[d1$Sample!="V8"], frequency = 1)
k <- auto.arima(ts_data)
d1[d1$Visit=="V8","OD/Blank ≥ 3 is positive"] <- forecast(k, h = 1)$mean[1]
for(i in sample[-1]){
d2=d %>%
filter(Sample==i) %>%
add_row(Sample = i, Visit = "V8" , )
ts_data <- ts(d2$`Mean of sample OD`[d2$Sample!="V8"], frequency = 1)
k <- auto.arima(ts_data)
d2[d2$Visit=="V8","Mean of sample OD"] <- forecast(k, h = 1)$mean[1]
ts_data <- ts(d2$`OD/Blank ≥ 3 is positive`[d2$Sample!="V8"], frequency = 1)
k <- auto.arima(ts_data)
d2[d2$Visit=="V8","OD/Blank ≥ 3 is positive"] <- forecast(k, h = 1)$mean[1]
d1=d1 %>% bind_rows(d2)
}
i=sample[1]
d2=d %>%
filter(Sample==i) %>%
add_row(Sample = i, Visit = "V8" , )
ts_data <- ts(d2$`Mean of sample OD`[d2$Sample!="V8"], frequency = 1)
k <- auto.arima(ts_data)
d2[d2$Visit=="V8","Mean of sample OD"] <- forecast(k, h = 1)$mean[1]
ts_data <- ts(d2$`OD/Blank ≥ 3 is positive`[d2$Sample!="V8"], frequency = 1)
k <- auto.arima(ts_data)
d2[d2$Visit=="V8","OD/Blank ≥ 3 is positive"] <- forecast(k, h = 1)$mean[1]
View(d2)
library(readxl)
library(dplyr)
library(tidyverse)
library(forecast)
path="D:/Naser/clinical Trial/01.06.2025 Perto Immuno simulate data/Screening test"
d=read_xlsx(paste0(path,"/Part 1 test 1.xlsx")) %>% filter(!is.na(Sample))
sample=unique(d$Sample)
i=sample[1]
d1=d %>%
filter(Sample==i) %>%
add_row(Sample = i, Visit = "V8" , )
ts_data <- ts(d1$`Mean of sample OD`[d1$Sample!="V7"], frequency = 1)
k <- auto.arima(ts_data)
d1[d1$Visit=="V8","Mean of sample OD"] <- forecast(k, h = 1)$mean[1]
ts_data <- ts(d1$`OD/Blank ≥ 3 is positive`[d1$Sample!="V7"], frequency = 1)
k <- auto.arima(ts_data)
d1[d1$Visit=="V8","OD/Blank ≥ 3 is positive"] <- forecast(k, h = 1)$mean[1]
library(readxl)
library(dplyr)
library(tidyverse)
library(forecast)
path="D:/Naser/clinical Trial/01.06.2025 Perto Immuno simulate data/Screening test"
d=read_xlsx(paste0(path,"/Part 1 test 1.xlsx")) %>% filter(!is.na(Sample))
sample=unique(d$Sample)
i=sample[1]
d1=d %>%
filter(Sample==i) %>%
add_row(Sample = i, Visit = "V8" , )
ts_data <- ts(d1$`Mean of sample OD`[d1$Sample!="V8"], frequency = 1)
k <- auto.arima(ts_data)
d1[d1$Visit=="V8","Mean of sample OD"] <- forecast(k, h = 2)$mean[1]
ts_data <- ts(d1$`OD/Blank ≥ 3 is positive`[d1$Sample!="V8"], frequency = 1)
k <- auto.arima(ts_data)
d1[d1$Visit=="V8","OD/Blank ≥ 3 is positive"] <- forecast(k, h = 2)$mean[1]
d=read_xlsx(paste0(path,"/Part 1 test 2 confirm.xlsx")) %>% filter(!is.na(Sample))
d=read_xlsx(paste0(path,"/Part 1 test 2 confirm.xlsx"))
d=read_xlsx(paste0(path,"/Part 1 test 2 confirm.xlsx")) %>% filter(!is.na(Sample))
d=read_xlsx(paste0(path,"/Part 1 test 2 confirm.xlsx")) %>% filter(!is.na(Sample))
sample=unique(d$Sample)
d=read_xlsx(paste0(path,"/Part 1 test 2 confirm.xlsx")) %>% filter(!is.na(Sample))
sample=unique(d$Sample)
i=sample[1]
d1=d %>%
filter(Sample==i) %>%
add_row(Sample = i, Visit = "V8" , )
ts_data <- ts(d1$`Mean of sample OD`[d1$Sample!="V8"], frequency = 1)
k <- auto.arima(ts_data)
d1[d1$Visit=="V8","Mean of sample OD"] <- forecast(k, h = 2)$mean[1]
ts_data <- ts(d1$`OD/Blank ≥ 3 is positive`[d1$Sample!="V8"], frequency = 1)
k <- auto.arima(ts_data)
d1[d1$Visit=="V8","OD/Blank ≥ 3 is positive"] <- forecast(k, h = 2)$mean[1]
for(i in sample[-1]){
d2=d %>%
filter(Sample==i) %>%
add_row(Sample = i, Visit = "V8" , )
ts_data <- ts(d2$`Mean of sample OD`[d2$Sample!="V8"], frequency = 1)
k <- auto.arima(ts_data)
d2[d2$Visit=="V8","Mean of sample OD"] <- forecast(k, h = 1)$mean[1]
ts_data <- ts(d2$`OD/Blank ≥ 3 is positive`[d2$Sample!="V8"], frequency = 1)
k <- auto.arima(ts_data)
d2[d2$Visit=="V8","OD/Blank ≥ 3 is positive"] <- forecast(k, h = 1)$mean[1]
d1=d1 %>% bind_rows(d2)
}
path="D:/Naser/clinical Trial/01.06.2025 Perto Immuno simulate data/data"
d=read_xlsx(paste0(path,"/Part 1 test 2 confirm.xlsx")) %>% filter(!is.na(Sample))
library(readxl)
library(dplyr)
library(tidyverse)
library(forecast)
path="D:/Naser/clinical Trial/01.06.2025 Perto Immuno simulate data/data"
d=read_xlsx(paste0(path,"/Part 1 test 2 confirm.xlsx")) %>% filter(!is.na(Sample))
library(readxl)
library(dplyr)
library(tidyverse)
library(forecast)
path="D:/Naser/clinical Trial/01.06.2025 Perto Immuno simulate data/data"
d=read_xlsx(paste0(path,"/Part 1 test 2 confirm.xlsx"))
View(d)
d=read_xlsx(paste0(path,"/Part 1 test 2 confirm.xlsx")) %>% filter(!is.na(Sample))
sample=unique(d$Sample)
sample
d=read_xlsx(paste0(path,"/Part 1 test 2 confirm.xlsx")) %>%
filter(!is.na(Sample)) %>%
mutate(ID=substr(Sample,1,4))
d=read_xlsx(paste0(path,"/Part 1 test 2 confirm.xlsx")) %>%
filter(!is.na(Sample)) %>%
mutate(ID=substr(Sample,1,4),
Visit=substr(Sample,6,7))
d=read_xlsx(paste0(path,"/Part 1 test 2 confirm.xlsx")) %>%
filter(!is.na(Sample)) %>%
mutate(Visit=substr(Sample,6,7),
Sample=substr(Sample,1,4))
d=read_xlsx(paste0(path,"/Part 1 test 2 confirm.xlsx")) %>%
filter(!is.na(Sample)) %>%
mutate(Visit=substr(Sample,6,7),
Sample=substr(Sample,1,4),
x=`Mean of sample OD`/`OD/Blank ≥ 3 is positive`)
library(readxl)
library(dplyr)
library(tidyverse)
library(forecast)
path="D:/Naser/clinical Trial/01.06.2025 Perto Immuno simulate data/data"
d=read_xlsx(paste0(path,"/Part 1 test 2 confirm.xlsx")) %>%
filter(!is.na(Sample)) %>%
mutate(Visit=substr(Sample,6,7),
Sample=substr(Sample,1,4))
excel_files <- list.files(path = path, pattern = "\\.xlsx?$", full.names = TRUE)
excel_files
all_data <- lapply(excel_files, read_excel)
all_data <- excel_files %>%
lapply(read_excel) %>%
lapply(function(df) {
df %>%
filter(!is.na(Sample)) %>%
mutate(
Visit = substr(Sample, 6, 7),
Sample = substr(Sample, 1, 4)
)
}) %>%
bind_rows()
View(all_data)
unique(all_data$Sample)
177*7
table(all_data$Visit)
library(readxl)
library(dplyr)
library(tidyverse)
library(forecast)
path="D:/Naser/clinical Trial/01.06.2025 Perto Immuno simulate data/data"
d=read_xlsx(paste0(path,"/Part 1 test 2 confirm.xlsx")) %>%
filter(!is.na(Sample)) %>%
mutate(Visit=substr(Sample,6,7),
Sample=substr(Sample,1,4))
excel_files <- list.files(path = path, pattern = "\\.xlsx?$", full.names = TRUE)
all_data <- lapply(excel_files, read_excel)
all_data <- excel_files %>%
lapply(read_excel) %>%
lapply(function(df) {
df %>%
filter(!is.na(Sample)) %>%
mutate(
Visit = substr(Sample, 6, 7),
Sample = substr(Sample, 1, 4)
)
}) %>%
bind_rows()
View(all_data)
table(all_data$Sample)
all_data_1 <- lapply(excel_files, read_excel)
View(all_data_1)
all_data_1[[1]]
all_data_1[[13]]
table(all_data$Sample)
data.frame(table(all_data$Sample))
library(readxl)
library(dplyr)
library(tidyverse)
library(forecast)
path="D:/Naser/clinical Trial/01.06.2025 Perto Immuno simulate data/data"
d=read_xlsx(paste0(path,"/Part 1 test 2 confirm.xlsx")) %>%
filter(!is.na(Sample)) %>%
mutate(Visit=substr(Sample,6,7),
Sample=substr(Sample,1,4))
excel_files <- list.files(path = path, pattern = "\\.xlsx?$", full.names = TRUE)
all_data_1 <- lapply(excel_files, read_excel)
all_data <- lapply(excel_files, function(file) {
read_excel(file) %>%
filter(!is.na(Sample)) %>%
mutate(
Visit = substr(Sample, 6, 7),
Sample = substr(Sample, 1, 4),
FileName = basename(file)  # Add file name column
)
}) %>%
bind_rows()
View(all_data)
data.frame(table(all_data$Sample))
# Assuming all_data has columns: Sample and FileName
repeated_samples <- all_data %>%
group_by(Sample) %>%
summarise(file_count = n_distinct(FileName)) %>%
filter(file_count > 1)
repeated_samples
View(repeated_samples)
library(readxl)
library(dplyr)
library(tidyverse)
library(forecast)
path="D:/Naser/clinical Trial/01.06.2025 Perto Immuno simulate data/data"
d=read_xlsx(paste0(path,"/Part 1 test 2 confirm.xlsx")) %>%
filter(!is.na(Sample)) %>%
mutate(Visit=substr(Sample,6,7),
Sample=substr(Sample,1,4))
library(readxl)
library(dplyr)
library(tidyverse)
library(forecast)
path="D:/Naser/clinical Trial/01.06.2025 Perto Immuno simulate data/data"
# d=read_xlsx(paste0(path,"/Part 1 test 2 confirm.xlsx")) %>%
#   filter(!is.na(Sample)) %>%
#   mutate(Visit=substr(Sample,6,7),
#          Sample=substr(Sample,1,4))
excel_files <- list.files(path = path, pattern = "\\.xlsx?$", full.names = TRUE)
all_data_1 <- lapply(excel_files, read_excel)
all_data <- lapply(excel_files, function(file) {
read_excel(file) %>%
filter(!is.na(Sample)) %>%
mutate(
Visit = substr(Sample, 6, 7),
Sample = substr(Sample, 1, 4),
FileName = basename(file)  # Add file name column
)
}) %>%
bind_rows()
# Assuming all_data has columns: Sample and FileName
repeated_samples <- all_data %>%
group_by(Sample) %>%
summarise(file_count = n_distinct(FileName)) %>%
filter(file_count > 1)
View(repeated_samples)
library(readxl)
library(dplyr)
library(tidyverse)
library(forecast)
path="D:/Naser/clinical Trial/01.06.2025 Perto Immuno simulate data/data"
excel_files <- list.files(path = path, pattern = "\\.xlsx?$", full.names = TRUE)
all_data_1 <- lapply(excel_files, read_excel)
all_data <- lapply(excel_files, function(file) {
read_excel(file) %>%
filter(!is.na(Sample)) %>%
mutate(
Visit = substr(Sample, 6, 7),
Sample = substr(Sample, 1, 4),
FileName = basename(file)  # Add file name column
)
}) %>%
bind_rows()
repeated_samples <- all_data %>%
group_by(Sample) %>%
summarise(file_count = n_distinct(FileName)) %>%
filter(file_count > 1)
library(readxl)
library(dplyr)
library(tidyverse)
library(forecast)
path="D:/Naser/clinical Trial/01.06.2025 Perto Immuno simulate data/data"
excel_files <- list.files(path = path, pattern = "\\.xlsx?$", full.names = TRUE)
all_data_1 <- lapply(excel_files, read_excel)
all_data <- lapply(excel_files, function(file) {
read_excel(file) %>%
filter(!is.na(Sample)) %>%
mutate(
Visit = substr(Sample, 6, 7),
sample = substr(Sample, 1, 4),
FileName = basename(file)  # Add file name column
)
}) %>%
bind_rows()
# Assuming all_data has columns: Sample and FileName
repeated_samples <- all_data %>%
group_by(sample) %>%
summarise(file_count = n_distinct(FileName)) %>%
filter(file_count > 1)
# Assuming all_data has columns: Sample and FileName
repeated_samples <- all_data %>%
group_by(Sample) %>%
summarise(file_count = n_distinct(FileName)) %>%
filter(file_count > 1)
View(repeated_samples)
# Assuming all_data has columns: Sample and FileName
repeated_samples <- all_data %>%
group_by(sample) %>%
summarise(file_count = n_distinct(FileName)) %>%
filter(file_count > 1)
View(repeated_samples)
write.csv(repeated_samples,paste0(path,"/ code.csv"))
shiny::runApp('C:/Users/StatDep/Desktop/PBE')
runApp('C:/Users/StatDep/Desktop/PBE')
d= readxl::read_excel("D:/Naser/Shiny & Power BI/Export Shiny app/data/Editted data/ER-05-25.05.2025.xlsx")
View(d)
colnamnes(d)
colnames(d)
d1=d %>%
filter(Gregorian_year %in% c(2025,2024) & Gregorian_month %in% c(1,2,3,4,5,6))
library(dplyr)
d1=d %>%
filter(Gregorian_year %in% c(2025,2024) & Gregorian_month %in% c(1,2,3,4,5,6))
d1=d %>%
filter(Gregorian_year %in% c(2025,2024) & Gregorian_month %in% c(1,2,3,4,5,6)) %>%
groupby(Gregorian_year,Gregorian_month) %>%
summarise(Total_Net=sum(Total_Net,na.rm=TRUE))
d1=d %>%
filter(Gregorian_year %in% c(2025,2024) & Gregorian_month %in% c(1,2,3,4,5,6)) %>%
group_by(Gregorian_year,Gregorian_month) %>%
summarise(Total_Net=sum(Total_Net,na.rm=TRUE))
View(d1)
d1=d %>%
filter(Gregorian_year %in% c(2025,2024) & Gregorian_month %in% c(1,2,3,4,5,6)) %>%
group_by(Gregorian_year,Gregorian_month,Manufacturer) %>%
summarise(Total_Net=sum(Total_Net,na.rm=TRUE))
View(d1)
d= readxl::read_excel("D:/Naser/Shiny & Power BI/Export Shiny app/data/Editted data/ER-06-14.07.2025.xlsx")
library(dplyr)
d= readxl::read_excel("D:/Naser/Shiny & Power BI/Export Shiny app/data/Editted data/ER-06-14.07.2025.xlsx")
library(dplyr)
d2=d %>%
# filter(Gregorian_year %in% c(2025,2024) & Gregorian_month %in% c(1,2,3,4,5,6)) %>%
group_by(Gregorian_year,Country,Manufacturer) %>%
summarise(Total_Net=sum(Total_Net,na.rm=TRUE))
View(d2)
d2=d %>%
filter(Manufacturer=="CinnaGen") %>%
group_by(Gregorian_year,Country) %>%
summarise(Total_Net=sum(Total_Net,na.rm=TRUE))
View(d2)
write.csv(d2,"D:/Naser/Shiny & Power BI/Export Shiny app/data/Editted data/Net by Country and year.csv")
d= readxl::read_excel("D:/Naser/Shiny & Power BI/Export Shiny app/data/Editted data/ER-06-14.07.2025.xlsx")
library(dplyr)
# d1=d %>%
#   filter(Gregorian_year %in% c(2025,2024) & Gregorian_month %in% c(1,2,3,4,5,6)) %>%
#   group_by(Gregorian_year,Gregorian_month,Manufacturer) %>%
#   summarise(Total_Net=sum(Total_Net,na.rm=TRUE))
d2=d %>%
filter(Manufacturer=="CinnaGen") %>%
group_by(Gregorian_year,Manufacturer,Country) %>%
summarise(Total_Net=sum(Total_Net,na.rm=TRUE))
write.csv(d2,"D:/Naser/Shiny & Power BI/Export Shiny app/data/Editted data/Net by Country and year.csv")
d3=d %>%
filter(Manufacturer=="CinnaGen") %>%
group_by(Gregorian_year,Manufacturer,Medicine) %>%
summarise(Total_Net=sum(Total_Net,na.rm=TRUE))
write.csv(d3,"D:/Naser/Shiny & Power BI/Export Shiny app/data/Editted data/Net by Medicine and year.csv")
d= readxl::read_excel("D:/Naser/Shiny & Power BI/Export Shiny app/data/Editted data/ER-06-14.07.2025.xlsx")
library(dplyr)
d2=d %>%
filter(Manufacturer=="CinnaGen") %>%
group_by(Gregorian_year,Manufacturer,Country) %>%
summarise(Total_Net=sum(Total_Net,na.rm=TRUE))
write.csv(d2,"D:/Naser/Shiny & Power BI/Export Shiny app/data/Editted data/Net by Country and year.csv")
d3=d %>%
filter(Manufacturer=="CinnaGen") %>%
group_by(Gregorian_year,Manufacturer,Medicine) %>%
summarise(Total_Net=sum(Total_Net,na.rm=TRUE))
write.csv(d3,"D:/Naser/Shiny & Power BI/Export Shiny app/data/Editted data/Net by Medicine and year.csv")
d= readxl::read_excel("D:/Naser/Shiny & Power BI/Export Shiny app/data/Editted data/ER-06-14.07.2025_khademi.xlsx")
d= readxl::read_excel("D:/Naser/Shiny & Power BI/Export Shiny app/data/Editted data/ER-06-14.07.2025_khademi.xlsx")
library(dplyr)
# d1=d %>%
#   filter(Gregorian_year %in% c(2025,2024) & Gregorian_month %in% c(1,2,3,4,5,6)) %>%
#   group_by(Gregorian_year,Gregorian_month,Manufacturer) %>%
#   summarise(Total_Net=sum(Total_Net,na.rm=TRUE))
d2=d %>%
filter(Manufacturer=="CinnaGen") %>%
group_by(Gregorian_year,Manufacturer,Country) %>%
summarise(Total_Net=sum(Total_Net,na.rm=TRUE))
write.csv(d2,"D:/Naser/Shiny & Power BI/Export Shiny app/data/Editted data/Net by Country and year.csv")
d3=d %>%
filter(Manufacturer=="CinnaGen") %>%
group_by(Gregorian_year,Manufacturer,Medicine) %>%
summarise(Total_Net=sum(Total_Net,na.rm=TRUE))
write.csv(d3,"D:/Naser/Shiny & Power BI/Export Shiny app/data/Editted data/Net by Medicine and year.csv")
d= readxl::read_excel("D:/Naser/Shiny & Power BI/Export Shiny app/data/Editted data/ER-06-14.07.2025_khademi.xlsx")
View(d)
d3=d %>%
filter(Manufacturer=="CinnaGen")
View(d3)
sum(d3$Total_Net)
library(readxl)
Path= "C:/Users/StatDep/Desktop/CM-389_PMP 1.0_27022020_with updated timelines.xlsx"
sheet=excel_sheets(path)
path= "C:/Users/StatDep/Desktop/CM-389_PMP 1.0_27022020_with updated timelines.xlsx"
sheet=excel_sheets(path)
sheet
write.csv(sheet, "C:/Users/StatDep/Desktop/sheet.csv")
shiny::runApp('C:/Users/StatDep/Desktop/PBE')
